const AWS = require('aws-sdk');
const dynamodb = new AWS.DynamoDB();
const s3 = new AWS.S3();

exports.handler = async (event) => {
  const movieId = event.pathParameters.id;
  const movieName = event.pathParameters.movieName;
  
  try {
    // Retrieve item from the first DynamoDB table
    const getItemParams = {
      TableName: 'first-dynamodb-table',
      Key: {
        movieId: { S: movieId }
      }
    };
    const getItemResult = await dynamodb.getItem(getItemParams).promise();
    const item = AWS.DynamoDB.Converter.unmarshall(getItemResult.Item);
    
    // Add movieId as a sort key to the second DynamoDB table
    const putItemParams = {
        TableName: 'second-dynamodb-table',
        Item: {
          userId: { S: userId },
          movieName: { S: movieName },
          // Add additional properties if needed
        }
      };
      await dynamodb.putItem(putItemParams).promise();
      
      // Save the rest of the movie information to phone internal storage using S3
      const saveToS3Params = {
        Bucket: 'phone-internal-storage',
        Key: `${movieName}.json`,
        Body: JSON.stringify(event.body),
        ContentType: 'application/json'
      };
      await s3.putObject(saveToS3Params).promise();
      
      return {
        statusCode: 200,
        body: JSON.stringify({ message: 'Movie added successfully' })
      };
    } catch (error) {
      return {
        statusCode: 500,
        body: JSON.stringify({ error: error.message })
      };
    }
  };
